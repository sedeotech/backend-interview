version: '3.5'

services:

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: test
    volumes:
      # copy the sql script to create tables
      - ../internal/storage/postgres/migrations:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  service:
    container_name: service_container
    build:
      context: ../
      dockerfile: $PWD/docker/service/service.Dockerfile
    environment:
      DEBUG: "true"
      GRPC_PORT: 9111
      POSTGRES_URL: postgres://postgres:changeme@postgres:5432/test?sslmode=disable
    ports:
      - 9111:9111
    networks: 
      - postgres
    depends_on:
      - postgres
  
  # localstack:
  #   container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
  #   image: localstack/localstack
  #   ports:
  #     - "127.0.0.1:4566:4566"
  #     - "127.0.0.1:4571:4571"
  #   environment:
  #     - SERVICES=s3
  #     - DEBUG=${DEBUG- }
  #     - DATA_DIR=${DATA_DIR- }
  #     - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
  #     - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
  #     - DOCKER_HOST=unix:///var/run/docker.sock
  #   volumes:
  #     - ./aws:/docker-entrypoint-initaws.d
  #     - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   networks:
  #     - postgres

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin: